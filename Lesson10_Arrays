//Group task - largest number

/*
A step by step solution to the largest number (I will give hints only for largest number, but the solution for both are the same)
1.Define an int array that is x amounts large
 1.1. Put values in the array 
2.Define an int variable called maxNumber, this is where we store the value of largest number
 2.1. The value of maxNumber should be the first value of the array
3.Go through the array with a loop
 3.1. If the i number is bigger than the maxNumber, we need to change the value of maxNumber to i
 3.2. Repeat  3.1. on the next cycle until the end of the array
4.Print out - "Largest number of array is " + maxNumber 
  */

public class Main {
  public static void main(String[] args) {
    int[] numbers = new int[5]; //{1, 7, 3, -2, 100};
    numbers[0] = 1;
    numbers[1] = 7;
    numbers[2] = 3;
    numbers[3] = -2;
    numbers[4] = 100 ;
    int maxNumber = numbers[0];
    for (int i = 0; i < numbers.length; i++) {
      if (numbers[i] > maxNumber) {
        maxNumber = numbers[i];
      }
    }
    System.out.println("Largest number of array is " + maxNumber);
  }

}

/*
We have an array with different numbers {1, 3, 4, 2, 5, 8}

User is providing a number

Check whether or not this number exists in the array */
import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    int[] numbers = {1, 3, 4, 2, 5, 8}; //number.length = size of the numbers = 6
    
    System.out.println("Please write your favourite digit");
    Scanner scanner = new Scanner(System.in);
    int favouriteNumber = scanner.nextInt();

    boolean isFound = false;

    for (int i = 0; i < numbers.length; i++) {
      if (numbers[i] == favouriteNumber) {
        isFound = true;
        break; // EXITS THE FOR LOOP ALTOGETHER, ignoring the i < number.length
      } 
        
    }
    if(isFound){
      System.out.println("Your favourite number " + favouriteNumber + " is in the array");
    }
    else {
      
    
    System.out.println("Your favourite number " + favouriteNumber + " is NOT FOUND");
    }
    scanner.close();
  }

}

/*
Fill the array with random numbers

Find the sum of all elements in the array.
For example in an array like this:
[2, 3, 5, 1]
Result: 11 (2 + 3 + 5 + 1)

Find all the elements in the array that is below 0
[-2, 3, -5, 1]
Result:
-2
-5
*/
import java.util.Random;

public class Main {
  public static void main(String[] args) {
    int[] arr= new int[5];
    Random random = new Random();
    System.out.println("I will create 5 random numbers between -99 and 99:");
    for (int i = 0; i < arr.length; i++) {
    
    arr[i] = random.nextInt(199) - 99; 
    System.out.println(arr[i]);
  }
    int sum = 0;

    for (int i = 0; i < arr.length; i++) {
      sum += arr[i];
    }
    System.out.println("Sum of all elements: " + sum);
  
  for (int i = 0; i < arr.length; i++) {
    if (arr[i] < 0) {
      System.out.println("Randomly created element below 0 is: " + arr[i]);
    }
  }
    }
  }

/*
Fill the party list with people you would like to invite to the party.
Check whether or not "Anna" is in the array.
Check whether or not "Maris" is in the array.
["Oskars", "Anna", "Andris"]
Result: 
"Anna is in the party list"
"Maris is not in the party list"
*/
import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    String[] guests = {"Laura", "Aleksandra", "Elchin", "Ilva", "Agnese"};
    
    System.out.println("What is the name of a guests you would like to check?");
    Scanner scanner = new Scanner(System.in);
    String name = scanner.nextLine();
    boolean isInvited = false;
    
    for (int i = 0; i < guests.length; i++) {
    
    if (guests[i].equals(name)) {
      isInvited = true;
      break;
    }
    }
    if (isInvited) {  
      System.out.println(name + " is in the party list");
    }
    else {
      System.out.println(name + " is not in the party list");
    
    }
  }
}
