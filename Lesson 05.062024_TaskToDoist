Main.java:

import java.util.Scanner;

public class Main { //Is the UI - frontend
  public static TaskManager taskManager = new TaskManager();

  public static void main(String[] args) {
    //create a menu
    //Put it in a while loop
    //use scanner
    //if the user presses 1, we call CreateTask
    //if the user presses 2, we call showTodoList
    //if the user presses 3, ask the task name with isDone - true


    //if the user presses x, close the loop
    while(true) {
      Scanner scanner = new Scanner(System.in);
      System.out.println("Press 1 to create a task");
      System.out.println("Press 2 to show the todo list");
      System.out.println("Press 3 to set a task as daone");
      
      var userInput = scanner.nextLine();
      if(userInput.equals("1")){
         createTask();
      } else if (userInput.equals("2")) {
        showTodoList();
      } else if(userInput.equals("3")){
        showTodoList();
        System.out.println("Etner the finished task name:");
        var taskName = scanner.nextLine();
        taskManager.setTaskAsDone(taskName);
      }else{
        break;
      }
    }
  }

  public static void createTask(){
    Scanner scanner = new Scanner(System.in);
    //Input the task name
    System.out.println("Please input the name of the task");
    var name = scanner.nextLine();

    //Input the task description
    System.out.println("Please input the description of the task");
    var description = scanner.nextLine();


    var task = new Task(name, description);
    taskManager.addTask(task);
  }

  public static void showTodoList(){
    var tasks = taskManager.getTasks();
    for(var task : tasks) {
      System.out.println("This is a TASK");
      System.out.println(task.name);
      System.out.println(task.description);
      System.out.println(task.isDone);
    }
  }
}

Task.java:
// task.java -> template for a task (name, description, date, itIsDone)
public class Task {

  public String name;
  public String description;
  public boolean isDone;

  // var task = new Task(name, description);
  public Task(String name, String description) {
    this.name = name;
    this.description = description;
  }

}

TaskManager.java:
import java.util.ArrayList;
//MVP: Minimum Viable Product
//be able to add a task
//have a list of all the tasks
//set a task as done, by Task name

//BONUS:
//Get a random quote to stop procrastinating
//A list of undone tasks - filter
//A list of done tasks - filter


public class TaskManager {

  private ArrayList<Task> tasks = new ArrayList<Task>();

  //Because we want to use the default constructor
  // new TaskManager() - we don't need to add a custom constructor
  public void addTask(Task task) {
    tasks.add(task);
  }

  public ArrayList<Task> getTasks(){
    return tasks;
  }

  public void setTaskAsDone (String taskName){
    tasks.stream()
      .filter(x -> x.name.equals(taskName))
      .findFirst()
      .ifPresent(x -> x.isDone = true);
  }
}
