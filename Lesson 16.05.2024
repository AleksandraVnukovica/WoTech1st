public class Main {
  public static void main(String[] args) {
    int size = 10;
    int[][] grid = new int[size][size];
    int bombColumn = 1;
    int bombRow = 1;
      // 1  1  1 0  0  0  0  0  0  0
      // 1 5  1 0  0  0  0  0  0  0
      // 1  1  1 0  0  0  0  0  0  0
      // 0  0  0 0  0  0  0  0  0  0
      // ... times 10
    grid[bombRow][bombColumn] = 5; // Center
    grid[bombRow-1][bombColumn] = 1;  // Top middle
    grid[bombRow-1][bombColumn-1] = 1; // Top left
    grid[bombRow-1][bombColumn+1] = 1; // Top right

    grid[bombRow+1][bombColumn] = 1; // bottom middle
    grid[bombRow+1][bombColumn-1] = 1; // bottom left
    grid[bombRow+1][bombColumn+1] = 1; // bottom right

    grid[bombRow][bombColumn-1] = 1; // middle left
    grid[bombRow][bombColumn+1] = 1; // middle right
    
    printArray(grid, size);
  }

  public static void printArray(int[][] array, int size){
    for (int i=0; i < size; i++){
      for(int j = 0; j < size; j++){
        System.out.print(array[i][j] + " ");
      }
      System.out.println();
    }
  }
}

_____________________________________________
when we have a bomb on a row = 0

public class Main {
  public static void main(String[] args) {
    int size = 10;
    int[][] grid = new int[size][size];
    int bombColumn = 1;
    int bombRow = 0;
      // 1 5 1 0  0  0  0  0  0  0
      // 1  1  1 0  0  0  0  0  0  0
      // 0  0  0 0  0  0  0  0  0  0
      // ... times 10
    grid[bombRow][bombColumn] = 5; // Center
    if(bombRow != 0){
      grid[bombRow-1][bombColumn] = 1;  // Top middle
      grid[bombRow-1][bombColumn-1] = 1; // Top left
      grid[bombRow-1][bombColumn+1] = 1; // Top right
    }

    grid[bombRow+1][bombColumn] = 1; // bottom middle
    grid[bombRow+1][bombColumn-1] = 1; // bottom left
    grid[bombRow+1][bombColumn+1] = 1; // bottom right

    grid[bombRow][bombColumn-1] = 1; // middle left
    grid[bombRow][bombColumn+1] = 1; // middle right
    
    printArray(grid, size);
  }

  public static void printArray(int[][] array, int size){
    for (int i=0; i < size; i++){
      for(int j = 0; j < size; j++){
        System.out.print(array[i][j] + " ");
      }
      System.out.println();
    }
  }
}

_____________________________
we have a bombRow = 10

public class Main {
  public static void main(String[] args) {
    int size = 10;
    int[][] grid = new int[size][size];
    int bombColumn = 1;
    int bombRow = 9;
      // 1  1  1 0  0  0  0  0  0  0
      // 1 -1  1 0  0  0  0  0  0  0
      // 1  1  1 0  0  0  0  0  0  0
      // 0  0  0 0  0  0  0  0  0  0
      // ... times 10
    grid[bombRow][bombColumn] = 5; // Center
    if(bombRow != 0){
      grid[bombRow-1][bombColumn] = 1;  // Top middle
      grid[bombRow-1][bombColumn-1] = 1; // Top left
      grid[bombRow-1][bombColumn+1] = 1; // Top right
    }

    if(bombRow != size - 1){
    grid[bombRow+1][bombColumn] = 1; // bottom middle
    grid[bombRow+1][bombColumn-1] = 1; // bottom left
    grid[bombRow+1][bombColumn+1] = 1; // bottom right
    }

    grid[bombRow][bombColumn-1] = 1; // middle left
    grid[bombRow][bombColumn+1] = 1; // middle right
    
    printArray(grid, size);
  }

  public static void printArray(int[][] array, int size){
    for (int i=0; i < size; i++){
      for(int j = 0; j < size; j++){
        System.out.print(array[i][j] + " ");
      }
      System.out.println();
    }
  }
}

__________________________________________
public class Main {
    public static void main(String[] args) { // Main method
        int size = 10;
        int[][] grid = new int[size][size];
        int bombColumn = 9;
        int bombRow = 1;
        // 1 1 1 0 0 0 0 0 0 0
        // 1 5 1 0 0 0 0 0 0 0
        // 1 1 1 0 0 0 0 0 0 0
        // 0 0 0 0 0 0 0 0 0 0
        // .... times 10

        grid[bombRow][bombColumn] = 5; // Center
        if(bombRow != 0) {
            grid[bombRow - 1][bombColumn] = 1; // Top middle

            if(bombColumn != 0){
                grid[bombRow - 1][bombColumn - 1] = 1; // top left
            }

            if(bombColumn != size - 1){
                grid[bombRow - 1][bombColumn + 1] = 1; // top right
            }
        }

        if(bombRow != size - 1){
            grid[bombRow + 1][bombColumn] = 1; // bottom middle
            if(bombColumn != 0){
                grid[bombRow + 1][bombColumn - 1] = 1; //bottom left
            }
            if(bombColumn != size - 1){
                grid[bombRow + 1][bombColumn + 1] = 1; //bottom right
            }
            
        }

        if(bombColumn != 0){
            grid[bombRow][bombColumn - 1] = 1; // middle left
        }
        if(bombColumn != size - 1){
            grid[bombRow][bombColumn + 1] = 1; //middle right
        }

        
        printArray(grid, size);
    }

    public static void printArray(int[][] array, int size) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                System.out.print(array[i][j] + " ");
            }
            System.out.println();
        }
    }
}

___________________________________________
experiment
public class Main {
    public static void main(String[] args) { // Main method
        int size = 10;
        int[][] grid = new int[size][size];
        funExperiment(grid, size);
        printArray(grid, size);
    }

    public static void printArray(int[][] array, int size) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                System.out.print(array[i][j] + " ");
            }
            System.out.println();
        }
    }

    public static void funExperiment(int[][] grid, int size) {
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                if (i != 0) {
                    grid[i - 1][j]++; // Top middle

                    if (j != 0) {
                        grid[i - 1][j - 1]++; // top left
                    }

                    if (j != size - 1) {
                        grid[i - 1][j + 1]++; // top right
                    }
                }

                if (i != size - 1) {
                    grid[i + 1][j]++; // bottom middle
                    if (j != 0) {
                        grid[i + 1][j - 1]++; // bottom left
                    }
                    if (j != size - 1) {
                        grid[i + 1][j + 1]++; // bottom right
                    }

                }

                if (j != 0) {
                    grid[i][j - 1]++; // middle left
                }
                if (j != size - 1) {
                    grid[i][j + 1]++; // middle right
                }
            }
        }

    }
}
